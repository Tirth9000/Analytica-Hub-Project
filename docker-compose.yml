services:
  django:
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env  
    container_name: analytica_django
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
      - celery

  mysql:
    image: mysql:8.0
    container_name: analytica_mysql
    env_file:
      - .env 
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:6.2
    container_name: analytica_redis
    restart: always
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: >
      sh -c "
      celery -A analytica_project worker --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - redis

  flask:
    build: 
      context: .
      dockerfile: flask_api_utils/flask.Dockerfile  # Now, Dockerfile sees the entire project
    container_name: analytica_flask
    restart: always
    volumes:
      - ./flask_api_utils:/app/flask_api_utils
    ports:
      - "8080:5000"


volumes:
  mysql_data: